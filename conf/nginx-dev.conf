# generated by `lor framework`# user www www;
pid tmp/dev-nginx.pid;

# This number should be at maxium the number of CPU on the server
worker_processes 4;

events {
	# Number of connections per worker
	worker_connections 4096;
}

http {
	sendfile on;
	include ./mime.types;

    lua_package_path "./app/?.lua;./app/?/init.lua;./?.lua;/usr/local/lor/?.lua;/usr/local/lor/?/init.lua;;;";
    lua_package_cpath "./app/library/?.so;/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;;;";
    lua_code_cache off;

    server {
        listen 8080;
        root ./dist; 
        index index.html;
    }

	server {
		# List port
		listen 8888;

		# Access log
		access_log logs/dev-access.log;

		# Error log
		error_log logs/dev-error.log debug;

		# this variable is for view render(lua-resty-template)
		set $template_root '';

		location /static {
			alias ./app/static; #app/static;
		}

		# lor runtime
		location / {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
			add_header 'Access-Control-Allow-Credentials' 'true' always;

			# 处理 OPTIONS 预检请求（浏览器发出的预检请求）
			if ($request_method = OPTIONS) {
				return 204;
			}

			content_by_lua_file ./app/main.lua;
		}
	}
}
